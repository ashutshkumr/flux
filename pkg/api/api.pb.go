// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Checksum_Type int32

const (
	Checksum_GOOD   Checksum_Type = 0
	Checksum_BAD    Checksum_Type = 2
	Checksum_CUSTOM Checksum_Type = 3
)

// Enum value maps for Checksum_Type.
var (
	Checksum_Type_name = map[int32]string{
		0: "GOOD",
		2: "BAD",
		3: "CUSTOM",
	}
	Checksum_Type_value = map[string]int32{
		"GOOD":   0,
		"BAD":    2,
		"CUSTOM": 3,
	}
)

func (x Checksum_Type) Enum() *Checksum_Type {
	p := new(Checksum_Type)
	*p = x
	return p
}

func (x Checksum_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Checksum_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (Checksum_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x Checksum_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Checksum_Type.Descriptor instead.
func (Checksum_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2, 0}
}

type Ethernet_Type int32

const (
	Ethernet_AUTO Ethernet_Type = 0
	Ethernet_IPV4 Ethernet_Type = 2048
	Ethernet_IPV6 Ethernet_Type = 34525
)

// Enum value maps for Ethernet_Type.
var (
	Ethernet_Type_name = map[int32]string{
		0:     "AUTO",
		2048:  "IPV4",
		34525: "IPV6",
	}
	Ethernet_Type_value = map[string]int32{
		"AUTO": 0,
		"IPV4": 2048,
		"IPV6": 34525,
	}
)

func (x Ethernet_Type) Enum() *Ethernet_Type {
	p := new(Ethernet_Type)
	*p = x
	return p
}

func (x Ethernet_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ethernet_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (Ethernet_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x Ethernet_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ethernet_Type.Descriptor instead.
func (Ethernet_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3, 0}
}

type IPv4_Protocol int32

const (
	IPv4_AUTO IPv4_Protocol = 0
	IPv4_TCP  IPv4_Protocol = 6
	IPv4_UDP  IPv4_Protocol = 17
)

// Enum value maps for IPv4_Protocol.
var (
	IPv4_Protocol_name = map[int32]string{
		0:  "AUTO",
		6:  "TCP",
		17: "UDP",
	}
	IPv4_Protocol_value = map[string]int32{
		"AUTO": 0,
		"TCP":  6,
		"UDP":  17,
	}
)

func (x IPv4_Protocol) Enum() *IPv4_Protocol {
	p := new(IPv4_Protocol)
	*p = x
	return p
}

func (x IPv4_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IPv4_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (IPv4_Protocol) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x IPv4_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IPv4_Protocol.Descriptor instead.
func (IPv4_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4, 0}
}

type Flow_State int32

const (
	Flow_STARTED Flow_State = 0
	Flow_STOPPED Flow_State = 1
	Flow_PAUSED  Flow_State = 2
)

// Enum value maps for Flow_State.
var (
	Flow_State_name = map[int32]string{
		0: "STARTED",
		1: "STOPPED",
		2: "PAUSED",
	}
	Flow_State_value = map[string]int32{
		"STARTED": 0,
		"STOPPED": 1,
		"PAUSED":  2,
	}
)

func (x Flow_State) Enum() *Flow_State {
	p := new(Flow_State)
	*p = x
	return p
}

func (x Flow_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Flow_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[3].Descriptor()
}

func (Flow_State) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[3]
}

func (x Flow_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Flow_State.Descriptor instead.
func (Flow_State) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10, 0}
}

type PortStatQuery_Key int32

const (
	PortStatQuery_NAME      PortStatQuery_Key = 0
	PortStatQuery_FRAMES_TX PortStatQuery_Key = 1
	PortStatQuery_FRAMES_RX PortStatQuery_Key = 2
	PortStatQuery_BITS_TX   PortStatQuery_Key = 3
	PortStatQuery_BITS_RX   PortStatQuery_Key = 4
)

// Enum value maps for PortStatQuery_Key.
var (
	PortStatQuery_Key_name = map[int32]string{
		0: "NAME",
		1: "FRAMES_TX",
		2: "FRAMES_RX",
		3: "BITS_TX",
		4: "BITS_RX",
	}
	PortStatQuery_Key_value = map[string]int32{
		"NAME":      0,
		"FRAMES_TX": 1,
		"FRAMES_RX": 2,
		"BITS_TX":   3,
		"BITS_RX":   4,
	}
)

func (x PortStatQuery_Key) Enum() *PortStatQuery_Key {
	p := new(PortStatQuery_Key)
	*p = x
	return p
}

func (x PortStatQuery_Key) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortStatQuery_Key) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[4].Descriptor()
}

func (PortStatQuery_Key) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[4]
}

func (x PortStatQuery_Key) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortStatQuery_Key.Descriptor instead.
func (PortStatQuery_Key) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16, 0}
}

type FlowStatQuery_Key int32

const (
	FlowStatQuery_NAME      FlowStatQuery_Key = 0
	FlowStatQuery_FRAMES_TX FlowStatQuery_Key = 1
	FlowStatQuery_FRAMES_RX FlowStatQuery_Key = 2
	FlowStatQuery_BITS_TX   FlowStatQuery_Key = 3
	FlowStatQuery_BITS_RX   FlowStatQuery_Key = 4
	FlowStatQuery_STATE     FlowStatQuery_Key = 5
)

// Enum value maps for FlowStatQuery_Key.
var (
	FlowStatQuery_Key_name = map[int32]string{
		0: "NAME",
		1: "FRAMES_TX",
		2: "FRAMES_RX",
		3: "BITS_TX",
		4: "BITS_RX",
		5: "STATE",
	}
	FlowStatQuery_Key_value = map[string]int32{
		"NAME":      0,
		"FRAMES_TX": 1,
		"FRAMES_RX": 2,
		"BITS_TX":   3,
		"BITS_RX":   4,
		"STATE":     5,
	}
)

func (x FlowStatQuery_Key) Enum() *FlowStatQuery_Key {
	p := new(FlowStatQuery_Key)
	*p = x
	return p
}

func (x FlowStatQuery_Key) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowStatQuery_Key) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[5].Descriptor()
}

func (FlowStatQuery_Key) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[5]
}

func (x FlowStatQuery_Key) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowStatQuery_Key.Descriptor instead.
func (FlowStatQuery_Key) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17, 0}
}

type StrField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string             `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Values  []string           `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Ranges  []*StrField_Range  `protobuf:"bytes,3,rep,name=ranges,proto3" json:"ranges,omitempty"`
	Randoms []*StrField_Random `protobuf:"bytes,4,rep,name=randoms,proto3" json:"randoms,omitempty"`
}

func (x *StrField) Reset() {
	*x = StrField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrField) ProtoMessage() {}

func (x *StrField) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrField.ProtoReflect.Descriptor instead.
func (*StrField) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *StrField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StrField) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *StrField) GetRanges() []*StrField_Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *StrField) GetRandoms() []*StrField_Random {
	if x != nil {
		return x.Randoms
	}
	return nil
}

type NumField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   uint64             `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Values  []uint64           `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	Ranges  []*NumField_Range  `protobuf:"bytes,3,rep,name=ranges,proto3" json:"ranges,omitempty"`
	Randoms []*NumField_Random `protobuf:"bytes,4,rep,name=randoms,proto3" json:"randoms,omitempty"`
}

func (x *NumField) Reset() {
	*x = NumField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumField) ProtoMessage() {}

func (x *NumField) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumField.ProtoReflect.Descriptor instead.
func (*NumField) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *NumField) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NumField) GetValues() []uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *NumField) GetRanges() []*NumField_Range {
	if x != nil {
		return x.Ranges
	}
	return nil
}

func (x *NumField) GetRandoms() []*NumField_Random {
	if x != nil {
		return x.Randoms
	}
	return nil
}

type Checksum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  Checksum_Type `protobuf:"varint,1,opt,name=type,proto3,enum=flux.Checksum_Type" json:"type,omitempty"`
	Value uint64        `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Checksum) Reset() {
	*x = Checksum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checksum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checksum) ProtoMessage() {}

func (x *Checksum) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checksum.ProtoReflect.Descriptor instead.
func (*Checksum) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *Checksum) GetType() Checksum_Type {
	if x != nil {
		return x.Type
	}
	return Checksum_GOOD
}

func (x *Checksum) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Ethernet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dst  *StrField     `protobuf:"bytes,1,opt,name=dst,proto3" json:"dst,omitempty"`
	Src  *StrField     `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Type Ethernet_Type `protobuf:"varint,3,opt,name=type,proto3,enum=flux.Ethernet_Type" json:"type,omitempty"`
	Fcs  *Checksum     `protobuf:"bytes,4,opt,name=fcs,proto3" json:"fcs,omitempty"`
}

func (x *Ethernet) Reset() {
	*x = Ethernet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ethernet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ethernet) ProtoMessage() {}

func (x *Ethernet) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ethernet.ProtoReflect.Descriptor instead.
func (*Ethernet) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *Ethernet) GetDst() *StrField {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *Ethernet) GetSrc() *StrField {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Ethernet) GetType() Ethernet_Type {
	if x != nil {
		return x.Type
	}
	return Ethernet_AUTO
}

func (x *Ethernet) GetFcs() *Checksum {
	if x != nil {
		return x.Fcs
	}
	return nil
}

type IPv4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dst   *StrField     `protobuf:"bytes,1,opt,name=dst,proto3" json:"dst,omitempty"`
	Src   *StrField     `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty"`
	Proto IPv4_Protocol `protobuf:"varint,3,opt,name=proto,proto3,enum=flux.IPv4_Protocol" json:"proto,omitempty"`
}

func (x *IPv4) Reset() {
	*x = IPv4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv4) ProtoMessage() {}

func (x *IPv4) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv4.ProtoReflect.Descriptor instead.
func (*IPv4) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *IPv4) GetDst() *StrField {
	if x != nil {
		return x.Dst
	}
	return nil
}

func (x *IPv4) GetSrc() *StrField {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *IPv4) GetProto() IPv4_Protocol {
	if x != nil {
		return x.Proto
	}
	return IPv4_AUTO
}

type UDP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPort  *NumField `protobuf:"bytes,1,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort  *NumField `protobuf:"bytes,2,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Len      *NumField `protobuf:"bytes,3,opt,name=len,proto3" json:"len,omitempty"`
	Checksum *Checksum `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *UDP) Reset() {
	*x = UDP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UDP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UDP) ProtoMessage() {}

func (x *UDP) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UDP.ProtoReflect.Descriptor instead.
func (*UDP) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *UDP) GetSrcPort() *NumField {
	if x != nil {
		return x.SrcPort
	}
	return nil
}

func (x *UDP) GetDstPort() *NumField {
	if x != nil {
		return x.DstPort
	}
	return nil
}

func (x *UDP) GetLen() *NumField {
	if x != nil {
		return x.Len
	}
	return nil
}

func (x *UDP) GetChecksum() *Checksum {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type TCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPort  *NumField `protobuf:"bytes,1,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort  *NumField `protobuf:"bytes,2,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	Checksum *Checksum `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *TCP) Reset() {
	*x = TCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP) ProtoMessage() {}

func (x *TCP) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP.ProtoReflect.Descriptor instead.
func (*TCP) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *TCP) GetSrcPort() *NumField {
	if x != nil {
		return x.SrcPort
	}
	return nil
}

func (x *TCP) GetDstPort() *NumField {
	if x != nil {
		return x.DstPort
	}
	return nil
}

func (x *TCP) GetChecksum() *Checksum {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ethernet *Ethernet `protobuf:"bytes,1,opt,name=ethernet,proto3" json:"ethernet,omitempty"`
	Ipv4     *IPv4     `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Tcp      *TCP      `protobuf:"bytes,3,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp      *UDP      `protobuf:"bytes,4,opt,name=udp,proto3" json:"udp,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *Header) GetEthernet() *Ethernet {
	if x != nil {
		return x.Ethernet
	}
	return nil
}

func (x *Header) GetIpv4() *IPv4 {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *Header) GetTcp() *TCP {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *Header) GetUdp() *UDP {
	if x != nil {
		return x.Udp
	}
	return nil
}

type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Rx string `protobuf:"bytes,2,opt,name=rx,proto3" json:"rx,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *Endpoint) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *Endpoint) GetRx() string {
	if x != nil {
		return x.Rx
	}
	return ""
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Endpoints []*Endpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Headers   []*Header   `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *Flow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flow) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Flow) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

type SetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports []*Port `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	Flows []*Flow `protobuf:"bytes,2,rep,name=flows,proto3" json:"flows,omitempty"`
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *SetConfigRequest) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *SetConfigRequest) GetFlows() []*Flow {
	if x != nil {
		return x.Flows
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warnings []string `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors   []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *SetConfigResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *SetConfigResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type FlowsState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string   `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	State Flow_State `protobuf:"varint,2,opt,name=state,proto3,enum=flux.Flow_State" json:"state,omitempty"`
}

func (x *FlowsState) Reset() {
	*x = FlowsState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowsState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowsState) ProtoMessage() {}

func (x *FlowsState) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowsState.ProtoReflect.Descriptor instead.
func (*FlowsState) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *FlowsState) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *FlowsState) GetState() Flow_State {
	if x != nil {
		return x.State
	}
	return Flow_STARTED
}

type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow *FlowsState `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *SetStateRequest) GetFlow() *FlowsState {
	if x != nil {
		return x.Flow
	}
	return nil
}

type SetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warnings []string `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors   []string `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *SetStateResponse) Reset() {
	*x = SetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateResponse) ProtoMessage() {}

func (x *SetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateResponse.ProtoReflect.Descriptor instead.
func (*SetStateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *SetStateResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *SetStateResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type PortStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string            `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Keys  []PortStatQuery_Key `protobuf:"varint,2,rep,packed,name=keys,proto3,enum=flux.PortStatQuery_Key" json:"keys,omitempty"`
}

func (x *PortStatQuery) Reset() {
	*x = PortStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStatQuery) ProtoMessage() {}

func (x *PortStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStatQuery.ProtoReflect.Descriptor instead.
func (*PortStatQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *PortStatQuery) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *PortStatQuery) GetKeys() []PortStatQuery_Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type FlowStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string            `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Keys  []FlowStatQuery_Key `protobuf:"varint,2,rep,packed,name=keys,proto3,enum=flux.FlowStatQuery_Key" json:"keys,omitempty"`
}

func (x *FlowStatQuery) Reset() {
	*x = FlowStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowStatQuery) ProtoMessage() {}

func (x *FlowStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowStatQuery.ProtoReflect.Descriptor instead.
func (*FlowStatQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *FlowStatQuery) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *FlowStatQuery) GetKeys() []FlowStatQuery_Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

type PortStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FramesTx uint64 `protobuf:"varint,2,opt,name=frames_tx,json=framesTx,proto3" json:"frames_tx,omitempty"`
	FramesRx uint64 `protobuf:"varint,3,opt,name=frames_rx,json=framesRx,proto3" json:"frames_rx,omitempty"`
	BitsTx   uint64 `protobuf:"varint,4,opt,name=bits_tx,json=bitsTx,proto3" json:"bits_tx,omitempty"`
	BitsRx   uint64 `protobuf:"varint,5,opt,name=bits_rx,json=bitsRx,proto3" json:"bits_rx,omitempty"`
}

func (x *PortStat) Reset() {
	*x = PortStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStat) ProtoMessage() {}

func (x *PortStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStat.ProtoReflect.Descriptor instead.
func (*PortStat) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *PortStat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortStat) GetFramesTx() uint64 {
	if x != nil {
		return x.FramesTx
	}
	return 0
}

func (x *PortStat) GetFramesRx() uint64 {
	if x != nil {
		return x.FramesRx
	}
	return 0
}

func (x *PortStat) GetBitsTx() uint64 {
	if x != nil {
		return x.BitsTx
	}
	return 0
}

func (x *PortStat) GetBitsRx() uint64 {
	if x != nil {
		return x.BitsRx
	}
	return 0
}

type FlowStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FramesTx uint64     `protobuf:"varint,2,opt,name=frames_tx,json=framesTx,proto3" json:"frames_tx,omitempty"`
	FramesRx uint64     `protobuf:"varint,3,opt,name=frames_rx,json=framesRx,proto3" json:"frames_rx,omitempty"`
	BitsTx   uint64     `protobuf:"varint,4,opt,name=bits_tx,json=bitsTx,proto3" json:"bits_tx,omitempty"`
	BitsRx   uint64     `protobuf:"varint,5,opt,name=bits_rx,json=bitsRx,proto3" json:"bits_rx,omitempty"`
	State    Flow_State `protobuf:"varint,6,opt,name=state,proto3,enum=flux.Flow_State" json:"state,omitempty"`
}

func (x *FlowStat) Reset() {
	*x = FlowStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowStat) ProtoMessage() {}

func (x *FlowStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowStat.ProtoReflect.Descriptor instead.
func (*FlowStat) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *FlowStat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowStat) GetFramesTx() uint64 {
	if x != nil {
		return x.FramesTx
	}
	return 0
}

func (x *FlowStat) GetFramesRx() uint64 {
	if x != nil {
		return x.FramesRx
	}
	return 0
}

func (x *FlowStat) GetBitsTx() uint64 {
	if x != nil {
		return x.BitsTx
	}
	return 0
}

func (x *FlowStat) GetBitsRx() uint64 {
	if x != nil {
		return x.BitsRx
	}
	return 0
}

func (x *FlowStat) GetState() Flow_State {
	if x != nil {
		return x.State
	}
	return Flow_STARTED
}

type GetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port *PortStatQuery `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Flow *FlowStatQuery `protobuf:"bytes,2,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetStatsRequest) GetPort() *PortStatQuery {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *GetStatsRequest) GetFlow() *FlowStatQuery {
	if x != nil {
		return x.Flow
	}
	return nil
}

type GetStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warnings  []string    `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	Errors    []string    `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	PortStats []*PortStat `protobuf:"bytes,3,rep,name=port_stats,json=portStats,proto3" json:"port_stats,omitempty"`
	FlowStats []*FlowStat `protobuf:"bytes,4,rep,name=flow_stats,json=flowStats,proto3" json:"flow_stats,omitempty"`
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{21}
}

func (x *GetStatsResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *GetStatsResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GetStatsResponse) GetPortStats() []*PortStat {
	if x != nil {
		return x.PortStats
	}
	return nil
}

func (x *GetStatsResponse) GetFlowStats() []*FlowStat {
	if x != nil {
		return x.FlowStats
	}
	return nil
}

type StrField_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Step  string `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
	End   string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StrField_Range) Reset() {
	*x = StrField_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrField_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrField_Range) ProtoMessage() {}

func (x *StrField_Range) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrField_Range.ProtoReflect.Descriptor instead.
func (*StrField_Range) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StrField_Range) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *StrField_Range) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *StrField_Range) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type StrField_Random struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   string `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max   string `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	Count uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StrField_Random) Reset() {
	*x = StrField_Random{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrField_Random) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrField_Random) ProtoMessage() {}

func (x *StrField_Random) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrField_Random.ProtoReflect.Descriptor instead.
func (*StrField_Random) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0, 1}
}

func (x *StrField_Random) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *StrField_Random) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

func (x *StrField_Random) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type NumField_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Step  uint64 `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	End   uint64 `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *NumField_Range) Reset() {
	*x = NumField_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumField_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumField_Range) ProtoMessage() {}

func (x *NumField_Range) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumField_Range.ProtoReflect.Descriptor instead.
func (*NumField_Range) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NumField_Range) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *NumField_Range) GetStep() uint64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *NumField_Range) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type NumField_Random struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   uint64 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max   uint64 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	Count uint64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *NumField_Random) Reset() {
	*x = NumField_Random{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumField_Random) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumField_Random) ProtoMessage() {}

func (x *NumField_Random) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumField_Random.ProtoReflect.Descriptor instead.
func (*NumField_Random) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 1}
}

func (x *NumField_Random) GetMin() uint64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *NumField_Random) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *NumField_Random) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x6c, 0x75,
	0x78, 0x22, 0xa0, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66,
	0x6c, 0x75, 0x78, 0x2e, 0x53, 0x74, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x6c,
	0x75, 0x78, 0x2e, 0x53, 0x74, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x52, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x1a, 0x43, 0x0a, 0x05, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x1a, 0x42, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x73, 0x1a, 0x43,
	0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x1a, 0x42, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x73, 0x75, 0x6d, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75,
	0x6d, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4f,
	0x4f, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x03, 0x22, 0xc2, 0x01, 0x0a, 0x08, 0x45, 0x74,
	0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x74, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x74, 0x72,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e,
	0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x66, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x52, 0x03, 0x66, 0x63, 0x73, 0x22, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x34, 0x10,
	0x80, 0x10, 0x12, 0x0a, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x36, 0x10, 0xdd, 0x8d, 0x02, 0x22, 0x9d,
	0x01, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x34, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x74, 0x72, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x74,
	0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x29, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x75,
	0x78, 0x2e, 0x49, 0x50, 0x76, 0x34, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x43, 0x50, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x11, 0x22, 0xa9,
	0x01, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e,
	0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x29, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x4e, 0x75, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x03,
	0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78,
	0x2e, 0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x2a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x03, 0x54,
	0x43, 0x50, 0x12, 0x29, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x4e, 0x75, 0x6d, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a,
	0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x4e, 0x75, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75,
	0x78, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x22, 0x8e, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x52, 0x08, 0x65, 0x74, 0x68, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x69,
	0x70, 0x76, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x6c, 0x75, 0x78,
	0x2e, 0x49, 0x50, 0x76, 0x34, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x1b, 0x0a, 0x03, 0x74,
	0x63, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e,
	0x54, 0x43, 0x50, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x1b, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x55, 0x44, 0x50,
	0x52, 0x03, 0x75, 0x64, 0x70, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x2a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78, 0x12, 0x0e, 0x0a,
	0x02, 0x72, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x78, 0x22, 0x9f, 0x01,
	0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x66, 0x6c, 0x75, 0x78, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x66, 0x6c, 0x75, 0x78,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22,
	0x56, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x22, 0x4a, 0x0a, 0x0a, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x46, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x9b, 0x01,
	0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x22, 0x47, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x10, 0x04, 0x22, 0xa6, 0x01, 0x0a, 0x0d,
	0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0x52, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x54, 0x58, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x46, 0x52, 0x41, 0x4d, 0x45, 0x53, 0x5f, 0x52, 0x58, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x49, 0x54, 0x53, 0x5f, 0x54, 0x58, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x49, 0x54, 0x53, 0x5f, 0x52, 0x58, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x05, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x54, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x78, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x62, 0x69, 0x74, 0x73, 0x54, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x73,
	0x5f, 0x72, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x69, 0x74, 0x73, 0x52,
	0x78, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x54, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x78, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x69, 0x74, 0x73, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62,
	0x69, 0x74, 0x73, 0x54, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x72, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x69, 0x74, 0x73, 0x52, 0x78, 0x12, 0x26,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xa4, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x52, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x32, 0xc1, 0x01, 0x0a, 0x0b, 0x46, 0x6c, 0x75, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x66,
	0x6c, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x15, 0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x66, 0x6c, 0x75, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_proto_goTypes = []interface{}{
	(Checksum_Type)(0),        // 0: flux.Checksum.Type
	(Ethernet_Type)(0),        // 1: flux.Ethernet.Type
	(IPv4_Protocol)(0),        // 2: flux.IPv4.Protocol
	(Flow_State)(0),           // 3: flux.Flow.State
	(PortStatQuery_Key)(0),    // 4: flux.PortStatQuery.Key
	(FlowStatQuery_Key)(0),    // 5: flux.FlowStatQuery.Key
	(*StrField)(nil),          // 6: flux.StrField
	(*NumField)(nil),          // 7: flux.NumField
	(*Checksum)(nil),          // 8: flux.Checksum
	(*Ethernet)(nil),          // 9: flux.Ethernet
	(*IPv4)(nil),              // 10: flux.IPv4
	(*UDP)(nil),               // 11: flux.UDP
	(*TCP)(nil),               // 12: flux.TCP
	(*Header)(nil),            // 13: flux.Header
	(*Port)(nil),              // 14: flux.Port
	(*Endpoint)(nil),          // 15: flux.Endpoint
	(*Flow)(nil),              // 16: flux.Flow
	(*SetConfigRequest)(nil),  // 17: flux.SetConfigRequest
	(*SetConfigResponse)(nil), // 18: flux.SetConfigResponse
	(*FlowsState)(nil),        // 19: flux.FlowsState
	(*SetStateRequest)(nil),   // 20: flux.SetStateRequest
	(*SetStateResponse)(nil),  // 21: flux.SetStateResponse
	(*PortStatQuery)(nil),     // 22: flux.PortStatQuery
	(*FlowStatQuery)(nil),     // 23: flux.FlowStatQuery
	(*PortStat)(nil),          // 24: flux.PortStat
	(*FlowStat)(nil),          // 25: flux.FlowStat
	(*GetStatsRequest)(nil),   // 26: flux.GetStatsRequest
	(*GetStatsResponse)(nil),  // 27: flux.GetStatsResponse
	(*StrField_Range)(nil),    // 28: flux.StrField.Range
	(*StrField_Random)(nil),   // 29: flux.StrField.Random
	(*NumField_Range)(nil),    // 30: flux.NumField.Range
	(*NumField_Random)(nil),   // 31: flux.NumField.Random
}
var file_api_proto_depIdxs = []int32{
	28, // 0: flux.StrField.ranges:type_name -> flux.StrField.Range
	29, // 1: flux.StrField.randoms:type_name -> flux.StrField.Random
	30, // 2: flux.NumField.ranges:type_name -> flux.NumField.Range
	31, // 3: flux.NumField.randoms:type_name -> flux.NumField.Random
	0,  // 4: flux.Checksum.type:type_name -> flux.Checksum.Type
	6,  // 5: flux.Ethernet.dst:type_name -> flux.StrField
	6,  // 6: flux.Ethernet.src:type_name -> flux.StrField
	1,  // 7: flux.Ethernet.type:type_name -> flux.Ethernet.Type
	8,  // 8: flux.Ethernet.fcs:type_name -> flux.Checksum
	6,  // 9: flux.IPv4.dst:type_name -> flux.StrField
	6,  // 10: flux.IPv4.src:type_name -> flux.StrField
	2,  // 11: flux.IPv4.proto:type_name -> flux.IPv4.Protocol
	7,  // 12: flux.UDP.src_port:type_name -> flux.NumField
	7,  // 13: flux.UDP.dst_port:type_name -> flux.NumField
	7,  // 14: flux.UDP.len:type_name -> flux.NumField
	8,  // 15: flux.UDP.checksum:type_name -> flux.Checksum
	7,  // 16: flux.TCP.src_port:type_name -> flux.NumField
	7,  // 17: flux.TCP.dst_port:type_name -> flux.NumField
	8,  // 18: flux.TCP.checksum:type_name -> flux.Checksum
	9,  // 19: flux.Header.ethernet:type_name -> flux.Ethernet
	10, // 20: flux.Header.ipv4:type_name -> flux.IPv4
	12, // 21: flux.Header.tcp:type_name -> flux.TCP
	11, // 22: flux.Header.udp:type_name -> flux.UDP
	15, // 23: flux.Flow.endpoints:type_name -> flux.Endpoint
	13, // 24: flux.Flow.headers:type_name -> flux.Header
	14, // 25: flux.SetConfigRequest.ports:type_name -> flux.Port
	16, // 26: flux.SetConfigRequest.flows:type_name -> flux.Flow
	3,  // 27: flux.FlowsState.state:type_name -> flux.Flow.State
	19, // 28: flux.SetStateRequest.flow:type_name -> flux.FlowsState
	4,  // 29: flux.PortStatQuery.keys:type_name -> flux.PortStatQuery.Key
	5,  // 30: flux.FlowStatQuery.keys:type_name -> flux.FlowStatQuery.Key
	3,  // 31: flux.FlowStat.state:type_name -> flux.Flow.State
	22, // 32: flux.GetStatsRequest.port:type_name -> flux.PortStatQuery
	23, // 33: flux.GetStatsRequest.flow:type_name -> flux.FlowStatQuery
	24, // 34: flux.GetStatsResponse.port_stats:type_name -> flux.PortStat
	25, // 35: flux.GetStatsResponse.flow_stats:type_name -> flux.FlowStat
	17, // 36: flux.FluxService.SetConfig:input_type -> flux.SetConfigRequest
	20, // 37: flux.FluxService.SetState:input_type -> flux.SetStateRequest
	26, // 38: flux.FluxService.GetStats:input_type -> flux.GetStatsRequest
	18, // 39: flux.FluxService.SetConfig:output_type -> flux.SetConfigResponse
	21, // 40: flux.FluxService.SetState:output_type -> flux.SetStateResponse
	27, // 41: flux.FluxService.GetStats:output_type -> flux.GetStatsResponse
	39, // [39:42] is the sub-list for method output_type
	36, // [36:39] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checksum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ethernet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UDP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowsState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrField_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrField_Random); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumField_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumField_Random); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
